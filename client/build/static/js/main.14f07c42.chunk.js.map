{"version":3,"sources":["components/CardsContainer/CardsContainer.module.css","components/NavBar/NavBar.module.css","views/Detail page/Detail.module.css","components/Filter/Filter.module.css","components/Card/Card.module.css","components/SearchBar/SearchBar.module.css","views/Form page/Form.module.css","redux/actions.js","hooks/useGetPokemonById.js","views/Detail page/Detail.jsx","hooks/usePostPokemon.js","hooks/useGetTypes.js","views/Form page/validation.js","views/Form page/Form.jsx","components/Card/Card.jsx","components/Filter/Filter.jsx","components/CardsContainer/CardsContainer.jsx","components/SearchBar/SearchBar.jsx","views/Home page/Home.jsx","images/logopokemon.png","views/Landing page/Landing.jsx","components/NavBar/NavBar.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","GET_TYPES","FILTER_TYPE","ORDER_BY_ATTACK","ORDER_BY_NAME","DELETE_POKEMON","CLEAN_DETAIL","POST_POKEMON","getPokemons","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","apiData","pokemons","wrap","_context","prev","next","axios","sent","data","type","payload","stop","_x","apply","arguments","filterType","useGetPokemonById","useDispatch","id","useParams","pokemon","useSelector","state","pokemonDetail","useEffect","_ref2","_callee2","_context2","concat","_x2","getPokemonId","Detail","history","useHistory","_jsx","children","_jsxs","className","style","detail","name","toUpperCase","src","image","alt","health","attack","defense","speed","height","weight","marginBottom","types","map","v","join","onClick","_ref7","_callee7","_context7","delete","_x7","push","loadingSpinner","usePostPokemon","setSelectedType","_useState","useState","_useState2","_slicedToArray","input","setInput","event","_objectSpread","_defineProperty","target","value","_toConsumableArray","preventDefault","_ref8","_callee8","poke","_context8","post","paylaod","_x8","useGetTypes","infoType","_ref4","_callee4","_context4","_x4","validation","errors","test","Form","selectedType","_usePostPokemon","_usePostPokemon2","handleInputChange","handleSelectChange","handleSubmit","_useState3","_useState4","setErrors","pageContainer","createContainer","onSubmit","form","formcontainer","htmlFor","inputField","onChange","select","e","selectedTypesName","selectedTypes","find","t","handleTypeSelection","multiple","i","index","typeName","updatedSelectedTypes","filter","handleTypeRemoval","disabled","Object","keys","length","Card","card","Link","to","Filter","setPage","clickHandlerAttack","method","clickHandlerName","container","_ref6","_callee6","pokemonsApi","_context6","_x6","_ref5","_callee5","pokemonsDb","_context5","_x5","document","querySelectorAll","forEach","selectedIndex","CardsContainer","savedPage","localStorage","getItem","parseInt","getSavedPage","page","maxPage","Math","ceil","indexOfLastCard","indexOfFirstCard","displayedPokemons","slice","setItem","toString","savePage","pagination","Array","from","_","active","SearchBar","searchTerm","setSearchTerm","placeholder","_ref3","_callee3","_context3","_x3","Home","_Fragment","Landing","logopokemon","NavBar","mainCointainer","button","App","location","useLocation","pathname","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","pokemonFilter","rootReducer","undefined","action","pokemonFounded","_t$types","some","orderAttack","sort","a","b","orderName","first","toLowerCase","second","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","Provider","BrowserRouter","getElementById"],"mappings":"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","file":"static/js/main.14f07c42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsContainer_container__2PmzW\",\"pagination\":\"CardsContainer_pagination__1_FIT\",\"active\":\"CardsContainer_active__CXV9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCointainer\":\"NavBar_mainCointainer__f79sq\",\"button\":\"NavBar_button__rr0vx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingSpinner\":\"Detail_loadingSpinner__1XES5\",\"spin\":\"Detail_spin__2DenH\",\"detail\":\"Detail_detail__10jDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__26RW7\",\"select\":\"Filter_select__19G7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1L5z0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__1NzFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errors\":\"Form_errors__1RaKY\",\"formcontainer\":\"Form_formcontainer__3ORVO\",\"form\":\"Form_form__2qRvm\",\"pageContainer\":\"Form_pageContainer__D1_Kn\",\"createContainer\":\"Form_createContainer__1wNic\",\"inputField\":\"Form_inputField__15KAZ\",\"selectField\":\"Form_selectField__2uQbe\",\"select\":\"Form_select__1KrKd\",\"submitButton\":\"Form_submitButton__q6Uz-\"};","import axios from \"axios\";\r\n\r\nexport const GET_POKEMONS = \"GET_POKEMONS\";\r\nexport const GET_POKEMON_ID = \"GET_POKEMON_ID\";\r\nexport const GET_POKEMON_NAME = \"GET_POKEMON_NAME\";\r\nexport const GET_TYPES = \"GET_TYPES\";\r\nexport const FILTER_TYPE = \"FILTER_TYPE\";\r\nexport const FILTER_DATABASE = \"FILTER_DATABASE\";\r\nexport const FILTER_API = \"FILTER_API\";\r\nexport const ORDER_BY_ATTACK = \"ORDER_BY_ATTACK\";\r\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\r\nexport const DELETE_POKEMON = \"DELETE_POKEMON\";\r\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\r\nexport const POST_POKEMON = \"POST_POKEMON\";\r\n\r\nexport const getPokemons = () => {\r\n  return async function (dispatch) {\r\n    const apiData = await axios(\"https://pi-pokemon-production-5f47.up.railway.app/pokemon\");\r\n    const pokemons = apiData.data;\r\n    dispatch({ type: GET_POKEMONS, payload: pokemons });\r\n  };\r\n};\r\n\r\nexport const getPokemonId = (id) => {\r\n  return async function (dispatch) {\r\n    const apiData = await axios(`https://pi-pokemon-production-5f47.up.railway.app/pokemon/${id}`);\r\n    const pokemon = apiData.data;\r\n    dispatch({ type: GET_POKEMON_ID, payload: pokemon });\r\n  };\r\n};\r\n\r\nexport const getPokemonName = (name) => {\r\n  return async function (dispatch) {\r\n    const apiData = await axios(`https://pi-pokemon-production-5f47.up.railway.app/pokemon?name=${name}`);\r\n    const pokemon = apiData.data;\r\n    dispatch({ type: GET_POKEMON_NAME, payload: pokemon });\r\n  };\r\n};\r\n\r\nexport const getTypes = () => {\r\n  return async function (dispatch) {\r\n    const apiData = await axios(\"https://pi-pokemon-production-5f47.up.railway.app/type\");\r\n    const type = apiData.data;\r\n    dispatch({ type: GET_TYPES, payload: type });\r\n  };\r\n};\r\n\r\nexport const filterType = (type) => {\r\n  return {\r\n    type: FILTER_TYPE,\r\n    payload: type,\r\n  };\r\n};\r\n\r\nexport const filterByDatabase = () => {\r\n  return async function (dispatch) {\r\n      const apiData = await axios('https://pi-pokemon-production-5f47.up.railway.app/pokemon')\r\n      const pokemons = apiData.data\r\n      const pokemonsDb = pokemons.filter((pokemon) => typeof  pokemon.id === 'string')\r\n      dispatch({ type: 'FILTER_DATABASE', payload: pokemonsDb })\r\n  }\r\n};\r\n\r\nexport const filterByApi = () => {\r\n  return async function (dispatch) {\r\n      const apiData = await axios('https://pi-pokemon-production-5f47.up.railway.app/pokemon')\r\n      const pokemons = apiData.data\r\n      const pokemonsApi = pokemons.filter((pokemon) => typeof  pokemon.id === 'number')\r\n      dispatch({ type: 'FILTER_API', payload: pokemonsApi })\r\n  }\r\n};\r\n\r\nexport const sortByAttack = (method) => {\r\n  return {\r\n    type: ORDER_BY_ATTACK,\r\n    payload: method,\r\n  };\r\n};\r\n\r\nexport const sortByName = (method) => {\r\n  return {\r\n    type: ORDER_BY_NAME,\r\n    payload: method,\r\n  };\r\n};\r\n\r\nexport const deletedPokemon = (id) => {\r\n  return async function (dispatch) {\r\n    const apiData = await axios.delete(`https://pi-pokemon-production-5f47.up.railway.app/pokemon/${id}`);\r\n    const pokemon = apiData.data;\r\n    dispatch({ type: DELETE_POKEMON, payload: pokemon });\r\n  };\r\n};\r\n\r\nexport const cleanDetail = () => {\r\n  return {\r\n    type: CLEAN_DETAIL,\r\n  }\r\n};\r\n\r\nexport const postPokemon = (pokemon) => {\r\n  return async (dispatch) => {\r\n    const apiData = await axios.post('https://pi-pokemon-production-5f47.up.railway.app/pokemon', pokemon)\r\n    const poke = apiData.data;\r\n    dispatch({\r\n      type: POST_POKEMON,\r\n      paylaod: poke,\r\n    })\r\n  }\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getPokemonId, cleanDetail } from '../redux/actions';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst useGetPokemonById = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const pokemon = useSelector(state => state.pokemonDetail);\r\n\r\n    useEffect(() => {\r\n            dispatch(getPokemonId(id))       \r\n        //el cleanDetail limpia el componente Detail al salir\r\n        return () => {\r\n           dispatch(cleanDetail());\r\n        }\r\n    }, [dispatch, id]);\r\n\r\n    return pokemon;\r\n};\r\n\r\nexport default useGetPokemonById;","import { useDispatch } from \"react-redux\";\r\nimport useGetPokemonById from \"../../hooks/useGetPokemonById\";\r\nimport style from \"./Detail.module.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deletedPokemon } from \"../../redux/actions\";\r\n\r\n\r\nconst Detail = () => {\r\n  const pokemonData = useGetPokemonById();\r\n  const pokemon = pokemonData[0];\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deletedPokemon(pokemon.id));\r\n    history.push('/home');\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className={style.detail}>\r\n          <h2>\r\n            <strong>{pokemon.name.toUpperCase()}</strong>\r\n          </h2>\r\n          <img src={pokemon.image} alt=\"\" />\r\n          <p>\r\n            <strong>HEALTH: {pokemon.health}</strong>\r\n          </p>\r\n          <p>\r\n            <strong>ATTACK: {pokemon.attack}</strong>\r\n          </p>\r\n          <p>\r\n            <strong>DEFENSE: {pokemon.defense}</strong>\r\n          </p>\r\n          {pokemon.speed && (\r\n            <p>\r\n              <strong>SPEED: {pokemon.speed}</strong>\r\n            </p>\r\n          )}\r\n          {pokemon.height && (\r\n            <p>\r\n              <strong>HEIGHT: {pokemon.height}</strong>\r\n            </p>\r\n          )}\r\n          {pokemon.weight && (\r\n            <p>\r\n              <strong>WEIGHT: {pokemon.weight}</strong>\r\n            </p>\r\n          )}\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            <strong>\r\n              TYPES: {pokemon.types.map((v) => v.name).join(\" / \")}\r\n            </strong>\r\n          </div>\r\n          {typeof pokemon?.id === \"string\" ? (\r\n        <button onClick={handleDelete}>Delete</button>\r\n      ) : null}\r\n        </div>\r\n      ) : (\r\n        <div className={style.loadingSpinner}></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postPokemon } from \"../redux/actions\";\r\n\r\n\r\nconst usePostPokemon = ({ setSelectedType }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        image: \"\",\r\n        health: \"\",\r\n        attack: \"\",\r\n        defense: \"\",\r\n        speed: \"\",\r\n        height: \"\",\r\n        weight: \"\",\r\n        types: [],\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        setInput({\r\n            ...input,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    };\r\n\r\n    const handleSelectChange = (event) => {\r\n        setInput({\r\n            ...input,\r\n            types: [...input.types, event.target.value]\r\n        })\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(postPokemon(input))\r\n        setInput({\r\n            name: \"\",\r\n            image: \"\",\r\n            health: \"\",\r\n            attack: \"\",\r\n            defense: \"\",\r\n            speed: \"\",\r\n            height: \"\",\r\n            weight: \"\",\r\n            types: [],\r\n        });\r\n        setSelectedType([]);\r\n        history.push('./home');        \r\n    };\r\n\r\n    return [input, handleInputChange, handleSelectChange, handleSubmit];\r\n\r\n};\r\n\r\nexport default usePostPokemon;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTypes } from \"../redux/actions\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useGetTypes = () => {\r\n    const dispatch = useDispatch();\r\n    const types = useSelector(state => state.infoType);\r\n  \r\n  useEffect(() => {\r\n    dispatch(getTypes())\r\n  }, [dispatch])\r\n\r\n  return types;\r\n}\r\n\r\nexport default useGetTypes;","const validation = (value) => {\r\n    let errors = {};\r\n    \r\n    //name\r\n    if(!/^[A-Za-z]{1,30}$/g.test(value.name)) errors.name = \"Only letters\";\r\n    if (!value.name) errors.name = \"Need a name\";\r\n\r\n    //image\r\n    if (!/\\.(jpeg|jpg|gif|png|bmp|svg)$/i.test(value.image)) errors.image = \"Enter Url Image\";\r\n    if (!value.image) errors.image = \"Need an image\";\r\n\r\n    //health\r\n    if(!value.health) errors.health = \"Need health\";\r\n    if(value.health < 0 || value.health > 255) errors.health = \"Health must be between 0 and 255\";\r\n\r\n    //attack\r\n    if(!value.attack) errors.attack = \"Need attack\";\r\n    if(value.attack < 0 || value.attack > 255) errors.attack = \"Attack must be between 0 and 255\";\r\n\r\n    //defense\r\n    if(!value.defense) errors.defense = \"Need defense\";\r\n    if(value.defense < 0 || value.defense > 255) errors.defense = \"Defense must be between 0 and 255\";\r\n    \r\n    //speed\r\n    if(value.speed && value.speed < 1 || value.speed > 255) errors.speed = \"Speed must be between 0 and 255\";\r\n    \r\n    //height\r\n    if(value.height && value.height < 1 || value.height > 40) errors.height = \"Height must be between 0 and 40\";\r\n    \r\n    //weight\r\n    if(value.weight && value.weight < 1 || value.weight > 2500) errors.weight = \"Weight must be between 0 and 2500\";\r\n    \r\n    return errors;\r\n};\r\n\r\nexport default validation;","import { useEffect, useState } from \"react\";\r\nimport usePostPokemon from \"../../hooks/usePostPokemon\";\r\nimport useGetTypes from \"../../hooks/useGetTypes\";\r\nimport validation from \"./validation\";\r\nimport style from \"./Form.module.css\";\r\n\r\nconst Form = () => {\r\n  const [selectedType, setSelectedType] = useState([]);\r\n  const [input, handleInputChange, handleSelectChange, handleSubmit] =\r\n    usePostPokemon({ setSelectedType });\r\n  const types = useGetTypes();\r\n\r\n  const handleTypeSelection = (event) => {\r\n    const selectedTypesName = event.target.value;\r\n    const selectedTypes = types.find((t) => t.name === selectedTypesName);\r\n    if (selectedType) {\r\n      setSelectedType([...selectedType, selectedTypes]);\r\n    }\r\n  };\r\n\r\n  const handleTypeRemoval = (typeName) => {\r\n    const updatedSelectedTypes = selectedType.filter(\r\n      (type) => type.name !== typeName\r\n    );\r\n    setSelectedType(updatedSelectedTypes);\r\n  };\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setErrors(validation(input));\r\n  }, [input]);\r\n\r\n  return (\r\n    <div className={style.pageContainer}>\r\n      <div className={style.createContainer}>\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n          <div className={style.formcontainer}>\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"text\"\r\n              value={input.name}\r\n              onChange={handleInputChange}\r\n              name=\"name\"\r\n            />\r\n            <div className={style.errors}>\r\n              {errors.name && <span>{errors.name}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.formcontainer}>\r\n            <label htmlFor=\"image\">Image: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"text\"\r\n              value={input.image}\r\n              onChange={handleInputChange}\r\n              name=\"image\"\r\n            />\r\n            <div className={style.errors}>\r\n              {errors.image && <span>{errors.image}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.formcontainer}>\r\n            <label>Health: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"number\"\r\n              value={input.health}\r\n              onChange={handleInputChange}\r\n              name=\"health\"\r\n            />\r\n            <div className={style.errors}>\r\n              {errors.health && <span>{errors.health}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.formcontainer}>\r\n            <label>Attack: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"number\"\r\n              value={input.attack}\r\n              onChange={handleInputChange}\r\n              name=\"attack\"\r\n            />\r\n            <div className={style.errors}>\r\n              {errors.attack && <span>{errors.attack}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.formcontainer}>\r\n            <label>Defense: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"number\"\r\n              value={input.defense}\r\n              onChange={handleInputChange}\r\n              name=\"defense\"\r\n            />\r\n            <div className={style.errors}>\r\n              {errors.defense && <span>{errors.defense}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.formcontainer}>\r\n            <label>Speed: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"number\"\r\n              value={input.speed}\r\n              onChange={handleInputChange}\r\n              name=\"speed\"\r\n            />\r\n            <div className={style.errors}>\r\n            {errors.speed && <span>{errors.speed}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.formcontainer}>\r\n            <label>Height: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"number\"\r\n              value={input.height}\r\n              onChange={handleInputChange}\r\n              name=\"height\"\r\n            />\r\n            <div className={style.errors}>\r\n              {errors.height && <span>{errors.height}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.formcontainer}>\r\n            <label>Weight: </label>\r\n            <input\r\n              className={style.inputField}\r\n              type=\"number\"\r\n              value={input.weight}\r\n              onChange={handleInputChange}\r\n              name=\"weight\"\r\n            />\r\n            <div className={style.errors}>\r\n              {errors.weight && <span>{errors.weight}</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"types\">Types: </label>\r\n            <select\r\n              className={style.select}\r\n              name=\"types\"\r\n              onChange={(e) => {\r\n                handleSelectChange(e);\r\n                handleTypeSelection(e);\r\n              }}\r\n              multiple\r\n            >\r\n              {types.map((t, i) => (\r\n                <option key={i} value={t.name}>\r\n                  {t.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {selectedType.map((type, index) => (\r\n            <li key={index}>\r\n              {type.name}\r\n              <span onClick={() => handleTypeRemoval(type.name)}>❌</span>\r\n            </li>\r\n          ))}\r\n          <button type=\"submit\" disabled={Object.keys(errors).length > 0}>\r\n            SUBMIT\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { Link } from 'react-router-dom';\r\nimport style from './Card.module.css';\r\n\r\n\r\nconst Card = ({id, name, image, types}) => {\r\n  return (\r\n    <div className={style.card}>\r\n      <div>\r\n      <p><strong>{name}</strong></p>\r\n      </div>\r\n      <div>\r\n      <Link to={`detail/${id}`}>\r\n        <img src={image} alt=\"\" />\r\n        </Link>\r\n      </div>\r\n      <p>Types: {types}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  filterByApi,\r\n  filterByDatabase,\r\n  filterType,\r\n  getPokemons,\r\n  sortByAttack,\r\n  sortByName,\r\n} from \"../../redux/actions\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ setPage }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const clickHandlerDb = () => {\r\n    dispatch(filterByDatabase());\r\n  };\r\n\r\n  const clickHandlerApi = () => {\r\n    dispatch(filterByApi());\r\n  };\r\n\r\n  const clickHandlerAttack = (e) => {\r\n    dispatch(sortByAttack(e.target.value));\r\n  };\r\n\r\n  const clickHandlerName = (e) => {\r\n    dispatch(sortByName(e.target.value));\r\n  };\r\n\r\n  const handleTypeFilter = (e) => {\r\n    const selectedType = e.target.value;\r\n    dispatch(filterType(selectedType));\r\n    setPage(1);\r\n  };\r\n\r\n  const resetInput = () => { // resetea el select de types\r\n  const selects = document.querySelectorAll(\".resetSelect\");\r\n        selects.forEach((select) => (select.selectedIndex = 0));\r\n  }\r\n  const types = [\r\n    \"all\",\r\n    \"bug\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"electric\",\r\n    \"fairy\",\r\n    \"fighting\",\r\n    \"fire\",\r\n    \"flying\",\r\n    \"ghost\",\r\n    \"grass\",\r\n    \"ground\",\r\n    \"ice\",\r\n    \"normal\",\r\n    \"poison\",\r\n    \"psychic\",\r\n    \"rock\",\r\n    \"shadow\",\r\n    \"steel\",\r\n    \"unknown\",\r\n    \"water\",\r\n  ];\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <select className={`${style.select} resetSelect`} onChange={handleTypeFilter}>\r\n        {types.map((e) => (\r\n          <option key={e} value={e}>\r\n            {e}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={clickHandlerApi}>Api pokemons</button>\r\n      <button onClick={clickHandlerDb}>Created pokemons</button>\r\n      <button value=\"desc\" onClick={clickHandlerAttack}>\r\n        -ATT\r\n      </button>\r\n      <button value=\"asc\" onClick={clickHandlerAttack}>\r\n        +ATT\r\n      </button>\r\n      <button value=\"asc\" onClick={clickHandlerName}>\r\n        A-Z\r\n      </button>\r\n      <button value=\"desc\" onClick={clickHandlerName}>\r\n        Z-A\r\n      </button>\r\n      <button onClick={() => {\r\n        setPage(1)\r\n        dispatch(filterType(\"all\"))\r\n        dispatch(getPokemons())\r\n        resetInput()\r\n      }}>Reset</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport style from './CardsContainer.module.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\n\r\nconst CardsContainer = () => {\r\n    \r\n    const pokemons = useSelector(state => state.pokemons);\r\n\r\n    const [page, setPage] = useState(getSavedPage() || 1);\r\n    \r\n    const CARDS_PER_PAGE = 12;\r\n\r\n    const maxPage = Math.ceil(pokemons.length / CARDS_PER_PAGE);\r\n\r\n    const indexOfLastCard = page * CARDS_PER_PAGE;\r\n    const indexOfFirstCard = indexOfLastCard - CARDS_PER_PAGE;\r\n    const displayedPokemons = pokemons.slice(\r\n        indexOfFirstCard,\r\n        indexOfLastCard\r\n    );\r\n\r\n    const handlePrevPage = () => {\r\n        if (page > 1) {\r\n            setPage(page - 1);\r\n        }\r\n    };\r\n\r\n    const handleNextPage = () => {\r\n        if (page < maxPage) {\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n\r\n    const handleFirstPage = () => {\r\n        setPage(1);\r\n    };\r\n\r\n    const handleLastPage = () => {\r\n        setPage(maxPage);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Guarda la página actual en localStorage\r\n        savePage(page);\r\n    }, [page]);\r\n\r\n    function savePage(page) {\r\n        localStorage.setItem('currentPage', page.toString());\r\n    };\r\n\r\n    function getSavedPage() {\r\n        const savedPage = localStorage.getItem('currentPage');\r\n        return savedPage ? parseInt(savedPage, 10) : null;\r\n    };\r\n\r\n    const goToPage = (pageNumber) => {\r\n        setPage(pageNumber);\r\n    };\r\n\r\n    return(\r\n        <div className={style.container}>\r\n             <div className={style.pagination}>\r\n                {page > 1 && (\r\n                    <button onClick={handleFirstPage} disabled={page === 1}>\r\n                        &lt;&lt; 1\r\n                    </button>\r\n                )}\r\n                <button onClick={handlePrevPage} disabled={page === 1}>\r\n                    Anterior\r\n                </button>\r\n\r\n                {Array.from({ length: maxPage }, (_, index) => (\r\n                    <button key={index} onClick={() => goToPage(index + 1)} \r\n                    className={page === index + 1 ? style.active : ''}>\r\n                        {index + 1}\r\n                    </button>\r\n                ))}\r\n\r\n                <button onClick={handleNextPage} disabled={page === maxPage}>\r\n                    Siguiente\r\n                </button>\r\n                {page < maxPage && (\r\n                    <button onClick={handleLastPage} disabled={page === maxPage}>\r\n                        {maxPage} &gt;&gt;\r\n                    </button>\r\n                )}\r\n            </div>\r\n            <Filter setPage={setPage}/>\r\n            {displayedPokemons.map(pokemon => {\r\n                return <Card \r\n                    key={pokemon?.id}\r\n                    id={pokemon?.id}\r\n                    name={pokemon?.name}\r\n                    image={pokemon?.image}\r\n                    types={pokemon?.types.map((v) => v.name).join(' / ')}                      \r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardsContainer;\r\n\r\n","import { useState } from \"react\";\r\nimport style from \"./SearchBar.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPokemonName } from \"../../redux/actions\";\r\n\r\n\r\nconst SearchBar = () => {\r\n    \r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");  \r\n\r\n  const handleInputChange = (event) => {\r\n    const { value } = event.target;\r\n    setSearchTerm(value);\r\n};\r\n\r\n  const handleSearch = () => {\r\n    dispatch(getPokemonName(searchTerm)); \r\n    setSearchTerm(\"\");\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <input className={style.SearchBar}\r\n        type=\"text\"\r\n        placeholder=\"Search pokemon\"\r\n        value={searchTerm}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { useDispatch } from \"react-redux\";\r\nimport CardsContainer from \"../../components/CardsContainer/CardsContainer\";\r\nimport { useEffect } from \"react\";\r\nimport { getPokemons } from '../../redux/actions';\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPokemons());\r\n    }, [dispatch])\r\n    \r\n    return (\r\n        <>\r\n        <SearchBar />\r\n        <CardsContainer />  \r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/logopokemon.3abbc09d.png\";","import { Link } from \"react-router-dom\";\r\nimport logopokemon from \"../../images/logopokemon.png\"\r\n\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div>\r\n            <Link to='/home'>\r\n                <img src={logopokemon} alt=\"\" />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import { Link } from \"react-router-dom\";\r\nimport style from './NavBar.module.css';\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <div className={style.mainCointainer}>\r\n            <button className={style.button}>\r\n            <Link to='/home'>HOME</Link>\r\n            </button>\r\n            <button className={style.button}>\r\n            <Link to='/form'>CREATE</Link> \r\n            </button>                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import './App.css';\nimport { Home, Detail, Landing, Form } from './views';\nimport { Route, useLocation } from 'react-router-dom';\nimport NavBar from './components/NavBar/NavBar';\n\nfunction App() {\n\n  const location = useLocation();\n    \n\n  return (\n    <div className=\"App\">\n      {location.pathname!=='/' && <NavBar />}\n      <Route exact path='/' component={Landing}/>\n      <Route path='/home' component={Home}/>\n      <Route path='/detail/:id' component={Detail}/>\n      <Route path='/form' component={Form}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  FILTER_TYPE,\r\n  FILTER_DATABASE,\r\n  FILTER_API,\r\n  GET_POKEMONS,\r\n  GET_POKEMON_ID,\r\n  GET_POKEMON_NAME,\r\n  GET_TYPES,\r\n  ORDER_BY_ATTACK,\r\n  ORDER_BY_NAME,\r\n  DELETE_POKEMON,\r\n  CLEAN_DETAIL,\r\n  POST_POKEMON,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  pokemons: [], // lo muestra CardsContainer, si se modifica\r\n  pokemonFilter: [], // no se modifica\r\n  infoType: [],\r\n  pokemonDetail: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n        pokemonFilter: action.payload,\r\n      };\r\n\r\n    case GET_POKEMON_ID:\r\n      return { ...state, pokemonDetail: action.payload };\r\n\r\n    case CLEAN_DETAIL:\r\n      return { ...state, pokemonDetail: [] };\r\n\r\n    case GET_POKEMON_NAME:\r\n      let pokemonFounded =\r\n        action.payload.length > 0 ? action.payload : [...state.pokemonFilter];\r\n      return {\r\n        ...state,\r\n        pokemons: pokemonFounded,\r\n      };\r\n\r\n    case GET_TYPES:\r\n      return { ...state, infoType: action.payload };\r\n\r\n    case FILTER_TYPE:\r\n      let filterType =\r\n        action.payload === \"all\"\r\n          ? [...state.pokemons]\r\n          : [...state.pokemons].filter((t) =>\r\n              t.types?.some((e) => e.name === action.payload)\r\n            );\r\n      return {\r\n        ...state,\r\n        pokemons: filterType,\r\n      };\r\n\r\n        case FILTER_DATABASE:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n\r\n    case FILTER_API:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n\r\n    case ORDER_BY_ATTACK:\r\n      const orderAttack =\r\n        action.payload === \"asc\"\r\n          ? state.pokemons.slice().sort((a, b) => {\r\n              return b.attack - a.attack;\r\n            })\r\n          : state.pokemons.slice().sort((a, b) => {\r\n              return a.attack - b.attack;\r\n            });\r\n      return {\r\n        ...state,\r\n        pokemons: orderAttack,\r\n      };\r\n\r\n    case ORDER_BY_NAME:\r\n      const orderName =\r\n        action.payload === \"asc\"\r\n          ? state.pokemons.slice().sort((a, b) => {\r\n              let first = a.name.toLowerCase();\r\n              let second = b.name.toLowerCase();\r\n              if (first > second) return 1;\r\n              if (first < second) return -1;\r\n              return 0;\r\n            }) \r\n          : state.pokemons.slice().sort((a, b) => {\r\n              let first = a.name.toLowerCase();\r\n              let second = b.name.toLowerCase();\r\n              if (first > second) return -1;\r\n              if (first < second) return 1;\r\n              return 0;\r\n            });\r\n            // los metodos de ordenamiento se aplican sobre mi estado pokemons\r\n            // el cual ya puede tener algun filtro aplicado\r\n            // por lo que permite aplicar filtros sin descartar el anterior\r\n      return {\r\n        ...state,\r\n        pokemons: orderName,\r\n      };\r\n\r\n    case DELETE_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n        pokemonFilter: action.payload,\r\n      };\r\n\r\n    case POST_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: [...state.pokemons, action.payload],\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from './reducer';\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancer(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}